VAR_INPUT
    ls1: BOOL; (* Lichtschranke 1 leer *)
    ls2: BOOL; (* Lichtschranke 2 leer *)
    ls3: BOOL; (* Lichtschranke 3 leer *)
    piece_sucked: BOOL; (* Werkstück angesaugt *)
    storage_empty: BOOL; (* Lagerplatz leer *)
    piston_extended: BOOL; (* Piston ausgeklappt *)
    piston_reduced: BOOL; (* Piston eingeklappt *)
    arm_at_storage: BOOL; (* Arm am Lagerplatz *)
    arm_at_band: BOOL; (* Arm am Band *)
END_VAR
VAR_OUTPUT
    singeler_open : BOOL;
    band_speed: WORD; (* Bandgeschwindigkeit auf Hardware *)
    extend_piston : BOOL (* Ausschieber auf Hardware ausfahren *)
    arm_to_lager : BOOL (* Arm zum Lager auf Hardware fahren *)
    arm_to_band : BOOL (* Arm zum Band auf Hardware fahren *)
    suck_piece : BOOL (* Werkstück angesaugt *)
    release_piece : BOOL (* Werkstück loslassen *)
END_VAR
VAR
    S0 : BOOL := TRUE (* Initialisierung des Startzustands*)
    S1, S2, S3, S4, S5, S6, S7, S8, S9 : BOOL;
    S10, S11, S12, S13, S14, S15, S16, S17 : BOOL;
    S18, S19, S20, S21, S22, S23, S24, S25, S26 : BOOL;
    S27, S28, S29, S30, S31, S32, S33 : BOOL; (* Zustände *)
    Z1, Z2: CTU := 0; (* Zustandsübergänge *)
    Z3 : CTUD := 0; (* Zustandsübergänge *)
    EINAUS: BOOL; (* Ein/Aus *)
    AUTOMAN: BOOL := 1; (* Automatisch/Manuell *)
    HAND_BAND_EIN: BOOL; (* Transportband bewegen/stoppen *)
    HAND_BANDV: WORD; (* Transportband Geschwindigkeit *)
    HAND_AUSSCHIEBER: BOOL; (* Ausschieber aktiv *)
    HAND_ARM_ZUM_LAGER: BOOL; (* Arm zum Lager *)
    HAND_ARM_ZUM_BAND: BOOL; (* Arm zum Band *)
    HAND_ANSAUGEN: BOOL; (* Werkstück ansaugen *)
    HAND_LOSLASSEN: BOOL; (* Werkstück loslassen *)
    reference: BOOL; (* Referenzzustand *)
    T1 : TON; (* Timer für Band *)
    reference_time : TOF; (* Referenzzeit für Bandgeschwindigkeit *)
END_VAR
IF S0 THEN
    S0 := FALSE; (* Initialisierung des Startzustands *)
    S1 := TRUE;
    S2 := FALSE;
    S3 := FALSE;
    S4 := FALSE;
    S5 := FALSE;
    S6 := FALSE;
    S7 := FALSE;
    S8 := FALSE;
    S9 := FALSE;
    S10 := FALSE;
    S11 := FALSE;
    S12 := FALSE;
    S13 := FALSE;
    S14 := FALSE;
    S15 := FALSE;
    S16 := FALSE;
    S17 := FALSE;
    S18 := FALSE;
    S19 := FALSE;
    S20 := FALSE;
    S21 := FALSE;
    S22 := FALSE;
    S23 := FALSE;
    S24 := FALSE;
    S25 := FALSE;
    S26 := FALSE;
    S27 := FALSE;
    S28 := FALSE;
    S29 := FALSE;
    S30 := FALSE;
    S31 := FALSE;
    S32 := FALSE;
    S33 := FALSE;
    reference := FALSE;
ELSIF S1 THEN
    IF NOT AUTOMAN AND EINAUS THEN
        S1 := FALSE;
        S4 := TRUE;
        S2 := TRUE;
    ELSIF AUTOMAN AND EINAUS THEN
        S1 := FALSE;
        S2 := TRUE;
        S3 := TRUE;
    END_IF;
ELSIF S3 THEN
    band_speed := 32500;
    S3 := FALSE;
    S17 := TRUE;
    S20 := TRUE;
ELSIF S4 THEN
    IF HAND_BAND_EIN THEN
        band_speed := HAND_BANDV;
    ELSE
        band_speed := 0;
    END_IF;
    
    IF HAND_AUSSCHIEBER THEN
        extend_piston := TRUE;
    ELSE
        extend_piston := FALSE;
    END_IF;

    IF HAND_ARM_ZUM_LAGER AND NOT HAND_ARM_ZUM_BAND THEN
        arm_to_lager := TRUE;
    ELSE
        arm_to_lager := FALSE;
    END_IF;

    IF HAND_ARM_ZUM_BAND AND NOT HAND_ARM_ZUM_LAGER THEN
        arm_to_band := TRUE;
    ELSE
        arm_to_band := FALSE;
    END_IF;  

    IF HAND_ANSAUGEN AND NOT HAND_LOSLASSEN THEN
        suck_piece := TRUE;
    ELSE
        suck_piece := FALSE;  
    END_IF;

    IF HAND_LOSLASSEN AND NOT HAND_ANSAUGEN THEN
        release_piece := TRUE;
    ELSE
        release_piece := FALSE;
    END_IF;
    IF AUTOMAN THEN
        S4 := FALSE;
        S1 := TRUE;
    END_IF;   
END_IF;

IF S2 AND NOT EINAUS AND NOT piece_sucked THEN
    S2 := FALSE;
    S0 := TRUE;
END_IF;

IF S17 AND NOT S18 AND NOT ls2 AND ls3 THEN
    S17 := FALSE;
    S18 := TRUE;
    singeler_open := TRUE;
ELSIF S18 AND NOT S19 AND NOT ls3 THEN
    S18 := FALSE;
    S19 := TRUE;
    singeler_open := FALSE;
ELSIF S19 AND NOT S17 AND NOT reference THEN
    S19 := FALSE;
    S17 := TRUE;
END_IF;

IF S20 AND NOT S21 AND reference_time.Q THEN
    S20 := FALSE;
    S21 := TRUE;
    BANDV := 0;
    reference := TRUE;
ELSIF S21 THEN
    S22 := TRUE;
    S25 := TRUE;
    S28 := TRUE;
    S21 := FALSE;
    Z1 := 0;
    Z2 := 0;
    Z3 := 0;
END_IF;

IF S22 AND (NOT LS1 OR (LS3 AND NOT Z3 = 2 AND singeler_open)) THEN
    S22 := FALSE;
    S23 := TRUE;
    BANDV := 32500;
ELSIF S23 AND ((NOT LS3 AND Z3 = 2) OR BAND_TIME.Q) THEN
    S23 := FALSE;
    S24 := TRUE;
    BANDV := 0;
ELSIF S24 AND NOT S22 THEN
    S24 := FALSE;
    S22 := TRUE;
END_IF;

IF S25 AND NOT S26 AND NOT LS2 AND LS3 THEN
    S25 := FALSE;
    S26 := TRUE;
    singeler_open := TRUE;
ELSIF S26 AND NOT S27 AND NOT LS3 THEN
    S26 := FALSE;
    S27 := TRUE;
    singeler_open := FALSE;
ELSIF S27 AND NOT S25 THEN
    S27 := FALSE;
    S25 := TRUE;
END_IF;

IF S28 AND NOT S29 AND NOT storage_empty THEN
    S28 := FALSE;
    S29 := TRUE;
    extend_piston := TRUE;
ELSIF S29 AND NOT S30 AND piston_extended AND LS1 THEN
    S29 := FALSE;
    S30 := TRUE;
    extend_piston := FALSE;
    arm_to_lager := TRUE;
ELSIF S30 AND NOT S31 AND arm_at_lager THEN
    S30 := FALSE;
    S31 := TRUE;
    arm_to_lager := FALSE;
    release_piece := FALSE;
    suck_piece := TRUE;
ELSIF S31 AND NOT S32 AND piece_sucked THEN
    S31 := FALSE;
    S32 := TRUE;
    arm_to_band := TRUE;
ELSIF S32 AND NOT S33 AND arm_at_band THEN
    S32 := FALSE;
    S33 := TRUE;
    arm_to_band := FALSE;
    suck_piece := FALSE;
    release_piece := TRUE;
END_IF;


    
reference_time(IN:=S20 AND NOT ls1 AND NOT ls2 AND NOT ls3, PT:=T#10s);